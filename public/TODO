-normalise unicode data before passing it to Xapian
	module "unicodedata"
	unicodedata.normalize('NFKC', u'foo')

Concurrent access

Most backend formats (and certainly the main backend format for each release) will allow updates to be grouped into transactions, and will allow at least some old versions of the database to be searched while new ones are being written. Currently, all the backends only support a single writer existing at a given time; attempting to open another writer on the same database will throw xapian.DatabaseLockError to indicate that it wasn’t possible to acquire a lock. Multiple concurrent readers are supported (in addition to the writer).


Wildcards

It is also possible to use wildcards to match any number of trailing characters within a term; for example:

    wild* matches wild, wildcard, wildcat, wilderness

This feature is disabled by default; to enable it, see ‘Parser Flags’ below. It also requires a database to be set on the QueryParser (so that it can find the list of terms to expand the wildcard to).

By default the wildcard will expand to as many terms as there are with the specified prefix. This can cause performance problems, so you can limit the number of terms a wildcard will expand to by calling xapian.QueryParser.set_max_wildcard_expansion(). If this limit would be exceeded then an exception will be thrown. The exception may be thrown by the QueryParser, or later when Enquire handles the query.
